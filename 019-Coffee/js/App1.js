// Generated by CoffeeScript 2.3.2
var buildTree, initialize;

buildTree = async function(repos, index) {
  var contributors, repo;
  repo = repos[index];
  contributors = (await fetchJSON(repo.contributors_url));
  document.body.innerHTML = '';
  return body(function() {
    header({
      class: "header"
    }, function() {
      var select0;
      p({
        text: "HYF Repositories"
      });
      select0 = select({
        class: "repo-selector",
        "aria-label": "HYF Repositories"
      }, function() {
        var i, key, len, repo1, results;
        results = [];
        for (key = i = 0, len = repos.length; i < len; key = ++i) {
          repo1 = repos[key];
          results.push(option({
            text: repo1.name,
            value: key
          }));
        }
        return results;
      });
      select0.onchange = () => {
        return buildTree(repos, select0.value);
      };
      return select0.value = index;
    });
    return div({
      id: 'container'
    }, function() {
      div({
        class: "left-div whiteframe"
      }, function() {
        return table({}, function() {
          return tbody({}, function() {
            tr({}, function() {
              td({
                text: "Repository"
              });
              return td({}, function() {
                return a({
                  text: repo.name,
                  href: repo.html_url,
                  target: "_blank"
                });
              });
            });
            tr({}, function() {
              td({
                text: 'Description'
              });
              return td({
                text: repo.description
              });
            });
            tr({}, function() {
              td({
                text: 'Forks'
              });
              return td({
                text: repo.forks
              });
            });
            return tr({}, function() {
              td({
                text: 'Updated'
              });
              return td({
                text: new Date(repo.updated_at).toLocaleString('sv')
              });
            });
          });
        });
      });
      return div({
        class: "right-div whiteframe"
      }, function() {
        p({
          text: "Contributions",
          class: "contributor-header"
        });
        return ul({
          class: "contributor-list"
        }, function() {
          var contributor, i, len, results;
          results = [];
          for (i = 0, len = contributors.length; i < len; i++) {
            contributor = contributors[i];
            results.push(((contributor) => {
              var li0;
              li0 = li({
                class: "contributor-item",
                "aria-label": contributor.login,
                tabindex: 0
              }, function() {
                img({
                  src: contributor.avatar_url,
                  height: 48,
                  class: "contributor-avatar"
                });
                return div({
                  class: "contributor-data"
                }, function() {
                  div({
                    text: contributor.login
                  });
                  return div({
                    text: contributor.contributions,
                    class: "contributor-badge"
                  });
                });
              });
              li0.onclick = () => {
                return window.open(contributor.html_url, "_blank");
              };
              return li0.onkeyup = function(t) {
                if (t.key === 'Enter') {
                  return window.open(contributor.html_url, "_blank");
                }
              };
            })(contributor));
          }
          return results;
        });
      });
    });
  });
};

initialize = async() => {
  var repos;
  repos = (await fetchJSON("https://api.github.com/orgs/HackYourFuture/repos?per_page=100"));
  repos.sort((a, b) => {
    return a.name.localeCompare(b.name);
  });
  return buildTree(repos, 0);
};

initialize();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwMS5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxBcHAxLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxTQUFBLEVBQUE7O0FBQUEsU0FBQSxHQUFZLE1BQUEsUUFBQSxDQUFDLEtBQUQsRUFBUSxLQUFSLENBQUE7QUFDWCxNQUFBLFlBQUEsRUFBQTtFQUFBLElBQUEsR0FBTyxLQUFNLENBQUEsS0FBQTtFQUNiLFlBQUEsR0FBZSxDQUFBLE1BQU0sU0FBQSxDQUFVLElBQUksQ0FBQyxnQkFBZixDQUFOO0VBQ2YsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFkLEdBQTBCO1NBQzFCLElBQUEsQ0FBSyxRQUFBLENBQUEsQ0FBQTtJQUNKLE1BQUEsQ0FBTztNQUFFLEtBQUEsRUFBUTtJQUFWLENBQVAsRUFBNkIsUUFBQSxDQUFBLENBQUE7QUFDNUIsVUFBQTtNQUFBLENBQUEsQ0FBRTtRQUFFLElBQUEsRUFBTztNQUFULENBQUY7TUFDQSxPQUFBLEdBQVUsTUFBQSxDQUFPO1FBQUUsS0FBQSxFQUFRLGVBQVY7UUFBMkIsWUFBQSxFQUFlO01BQTFDLENBQVAsRUFBdUUsUUFBQSxDQUFBLENBQUE7QUFDaEYsWUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxLQUFBLEVBQUE7QUFBQTtRQUFBLEtBQUEsbURBQUE7O3VCQUNDLE1BQUEsQ0FBTztZQUFFLElBQUEsRUFBTyxLQUFLLENBQUMsSUFBZjtZQUFxQixLQUFBLEVBQVE7VUFBN0IsQ0FBUDtRQURELENBQUE7O01BRGdGLENBQXZFO01BR1YsT0FBTyxDQUFDLFFBQVIsR0FBbUIsQ0FBQSxDQUFBLEdBQUE7ZUFBRyxTQUFBLENBQVUsS0FBVixFQUFpQixPQUFPLENBQUMsS0FBekI7TUFBSDthQUNuQixPQUFPLENBQUMsS0FBUixHQUFnQjtJQU5ZLENBQTdCO1dBT0EsR0FBQSxDQUFJO01BQUMsRUFBQSxFQUFLO0lBQU4sQ0FBSixFQUF3QixRQUFB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QUcsQ0FBQyxPQUFKLEdBQWMsUUFBQSxDQUFDLENBQUQsQ0FBQTtnQkFDYixJQUFHLENBQUMsQ0FBQyxHQUFGLEtBQVMsT0FBWjt5QkFBeUIsTUFBTSxDQUFDLElBQVAsQ0FBWSxXQUFXLENBQUMsUUFBeEIsRUFBa0MsUUFBbEMsRUFBekI7O2NBRGE7WUFQWixDQUFBLENBQUgsQ0FBSSxXQUFKO1VBREQsQ0FBQTs7UUFEa0MsQ0FBbkM7TUFGdUMsQ0FBeEM7SUFoQnVCLENBQXhCO0VBUkksQ0FBTDtBQUpXOztBQXlDWixVQUFBLEdBQWEsS0FBQSxDQUFBLENBQUEsR0FBQTtBQUNaLE1BQUE7RUFBQSxLQUFBLEdBQVEsQ0FBQSxNQUFNLFNBQUEsQ0FBVSwrREFBVixDQUFOO0VBQ1IsS0FBSyxDQUFDLElBQU4sQ0FBVyxDQUFDLENBQUQsRUFBRyxDQUFILENBQUEsR0FBQTtXQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBUCxDQUFxQixDQUFDLENBQUMsSUFBdkI7RUFBVCxDQUFYO1NBQ0EsU0FBQSxDQUFVLEtBQVYsRUFBZ0IsQ0FBaEI7QUFIWTs7QUFJYixVQUFBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJidWlsZFRyZWUgPSAocmVwb3MsIGluZGV4KSAtPlxyXG5cdHJlcG8gPSByZXBvc1tpbmRleF1cclxuXHRjb250cmlidXRvcnMgPSBhd2FpdCBmZXRjaEpTT04gcmVwby5jb250cmlidXRvcnNfdXJsXHJcblx0ZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSAnJ1xyXG5cdGJvZHkgLT5cclxuXHRcdGhlYWRlciB7IGNsYXNzIDogXCJoZWFkZXJcIiB9LCAtPlxyXG5cdFx0XHRwIHsgdGV4dCA6IFwiSFlGIFJlcG9zaXRvcmllc1wifVxyXG5cdFx0XHRzZWxlY3QwID0gc2VsZWN0IHsgY2xhc3MgOiBcInJlcG8tc2VsZWN0b3JcIiwgXCJhcmlhLWxhYmVsXCIgOiBcIkhZRiBSZXBvc2l0b3JpZXNcIiB9LCAtPlxyXG5cdFx0XHRcdGZvciByZXBvMSxrZXkgaW4gcmVwb3NcclxuXHRcdFx0XHRcdG9wdGlvbiB7IHRleHQgOiByZXBvMS5uYW1lLCB2YWx1ZSA6IGtleSB9XHJcblx0XHRcdHNlbGVjdDAub25jaGFuZ2UgPSA9PiBidWlsZFRyZWUgcmVwb3MsIHNlbGVjdDAudmFsdWVcclxuXHRcdFx0c2VsZWN0MC52YWx1ZSA9IGluZGV4XHJcblx0XHRkaXYge2lkIDogJ2NvbnRhaW5lcid9LCAtPlxyXG5cdFx0XHRkaXYgeyBjbGFzcyA6IFwibGVmdC1kaXYgd2hpdGVmcmFtZVwiIH0sIC0+XHJcblx0XHRcdFx0dGFibGUge30sIC0+XHJcblx0XHRcdFx0XHR0Ym9keSB7fSwgLT5cclxuXHRcdFx0XHRcdFx0dHIge30sIC0+XHJcblx0XHRcdFx0XHRcdFx0dGQge3RleHQ6IFwiUmVwb3NpdG9yeVwifVxyXG5cdFx0XHRcdFx0XHRcdHRkIHt9LCAtPiBhIHt0ZXh0OiByZXBvLm5hbWUsIGhyZWY6IHJlcG8uaHRtbF91cmwsIHRhcmdldDpcIl9ibGFua1wifVxyXG5cdFx0XHRcdFx0XHR0ciB7fSwgLT5cclxuXHRcdFx0XHRcdFx0XHR0ZCB7dGV4dDogJ0Rlc2NyaXB0aW9uJ31cclxuXHRcdFx0XHRcdFx0XHR0ZCB7dGV4dDogcmVwby5kZXNjcmlwdGlvbn1cclxuXHRcdFx0XHRcdFx0dHIge30sIC0+XHJcblx0XHRcdFx0XHRcdFx0dGQge3RleHQ6ICdGb3Jrcyd9XHJcblx0XHRcdFx0XHRcdFx0dGQge3RleHQ6IHJlcG8uZm9ya3N9XHJcblx0XHRcdFx0XHRcdHRyIHt9LCAtPlxyXG5cdFx0XHRcdFx0XHRcdHRkIHt0ZXh0OiAnVXBkYXRlZCd9XHJcblx0XHRcdFx0XHRcdFx0dGQge3RleHQ6IG5ldyBEYXRlKHJlcG8udXBkYXRlZF9hdCkudG9Mb2NhbGVTdHJpbmcoJ3N2Jyl9XHJcblx0XHRcdGRpdiB7IGNsYXNzIDogXCJyaWdodC1kaXYgd2hpdGVmcmFtZVwiIH0sIC0+XHJcblx0XHRcdFx0cCB7IHRleHQgOiBcIkNvbnRyaWJ1dGlvbnNcIiwgY2xhc3MgOiBcImNvbnRyaWJ1dG9yLWhlYWRlclwiIH1cclxuXHRcdFx0XHR1bCB7IGNsYXNzIDogXCJjb250cmlidXRvci1saXN0XCIgfSwgLT5cclxuXHRcdFx0XHRcdGZvciBjb250cmlidXRvciBpbiBjb250cmlidXRvcnNcclxuXHRcdFx0XHRcdFx0ZG8gKGNvbnRyaWJ1dG9yKSA9PlxyXG5cdFx0XHRcdFx0XHRcdGxpMD1saSB7Y2xhc3M6XCJjb250cmlidXRvci1pdGVtXCIsIFwiYXJpYS1sYWJlbFwiOmNvbnRyaWJ1dG9yLmxvZ2luLCB0YWJpbmRleDowfSwgLT5cclxuXHRcdFx0XHRcdFx0XHRcdGltZyB7IHNyYyA6IGNvbnRyaWJ1dG9yLmF2YXRhcl91cmwsIGhlaWdodCA6IDQ4LCBjbGFzcyA6IFwiY29udHJpYnV0b3ItYXZhdGFyXCJ9XHJcblx0XHRcdFx0XHRcdFx0XHRkaXYgeyBjbGFzcyA6IFwiY29udHJpYnV0b3ItZGF0YVwifSwgLT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0ZGl2IHsgdGV4dCA6IGNvbnRyaWJ1dG9yLmxvZ2luIH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0ZGl2IHsgdGV4dCA6IGNvbnRyaWJ1dG9yLmNvbnRyaWJ1dGlvbnMsIGNsYXNzIDogXCJjb250cmlidXRvci1iYWRnZVwiIH1cclxuXHRcdFx0XHRcdFx0XHRsaTAub25jbGljayA9ID0+IHdpbmRvdy5vcGVuIGNvbnRyaWJ1dG9yLmh0bWxfdXJsLCBcIl9ibGFua1wiXHJcblx0XHRcdFx0XHRcdFx0bGkwLm9ua2V5dXAgPSAodCkgLT5cclxuXHRcdFx0XHRcdFx0XHRcdGlmIHQua2V5ID09ICdFbnRlcicgdGhlbiB3aW5kb3cub3BlbiBjb250cmlidXRvci5odG1sX3VybCwgXCJfYmxhbmtcIlxyXG5pbml0aWFsaXplID0gKCkgPT4gXHJcblx0cmVwb3MgPSBhd2FpdCBmZXRjaEpTT04gXCJodHRwczovL2FwaS5naXRodWIuY29tL29yZ3MvSGFja1lvdXJGdXR1cmUvcmVwb3M/cGVyX3BhZ2U9MTAwXCJcclxuXHRyZXBvcy5zb3J0IChhLGIpID0+IGEubmFtZS5sb2NhbGVDb21wYXJlIGIubmFtZVxyXG5cdGJ1aWxkVHJlZSByZXBvcywwXHJcbmluaXRpYWxpemUoKSJdfQ==
//# sourceURL=c:\github\foo\019-Coffee\coffee\App1.coffee