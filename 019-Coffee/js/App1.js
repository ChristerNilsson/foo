// Generated by CoffeeScript 2.3.2
var buildContainer, buildTree, initialize;

buildTree = function(repos, index) {
  body(function() {
    var container;
    header({
      class: "header"
    }, function() {
      p({
        text: "HYF Repositories"
      });
      return select({
        class: "repo-selector",
        "aria-label": "HYF Repositories"
      }, function() {
        var i, key, len, repo1, results;
        addListener('change', (evt) => {
          return buildContainer(repos[evt.target.value], container);
        });
        results = [];
        for (key = i = 0, len = repos.length; i < len; key = ++i) {
          repo1 = repos[key];
          results.push(option({
            text: repo1.name,
            value: key
          }));
        }
        return results;
      });
    });
    return container = div({
      id: 'container'
    });
  });
  ancestors.push(container);
  return buildContainer(repos[index], container);
};

buildContainer = async function(repo, container) {
  var contributors;
  contributors = (await fetchJSON(repo.contributors_url));
  container.innerHTML = '';
  div({
    class: "left-div whiteframe"
  }, function() {
    return table({}, function() {
      return tbody({}, function() {
        tr({}, function() {
          td({
            text: "Repository"
          });
          return td({}, function() {
            return a({
              text: repo.name,
              href: repo.html_url,
              target: "_blank"
            });
          });
        });
        tr({}, function() {
          td({
            text: 'Description'
          });
          return td({
            text: repo.description
          });
        });
        tr({}, function() {
          td({
            text: 'Forks'
          });
          return td({
            text: repo.forks
          });
        });
        return tr({}, function() {
          td({
            text: 'Updated'
          });
          return td({
            text: new Date(repo.updated_at).toLocaleString('sv')
          });
        });
      });
    });
  });
  return div({
    class: "right-div whiteframe"
  }, function() {
    p({
      text: "Contributions",
      class: "contributor-header"
    });
    return ul({
      class: "contributor-list"
    }, function() {
      var contributor, i, len, results;
      results = [];
      for (i = 0, len = contributors.length; i < len; i++) {
        contributor = contributors[i];
        results.push(((contributor) => {
          return li({
            class: "contributor-item",
            "aria-label": contributor.login,
            tabindex: 0
          }, function() {
            addListener('click', () => {
              return window.open(contributor.html_url, "_blank");
            });
            addListener('keyup', (t) => {
              if (t.key === 'Enter') {
                return window.open(contributor.html_url, "_blank");
              }
            });
            img({
              src: contributor.avatar_url,
              height: 48,
              class: "contributor-avatar"
            });
            return div({
              class: "contributor-data"
            }, function() {
              div({
                text: contributor.login
              });
              return div({
                text: contributor.contributions,
                class: "contributor-badge"
              });
            });
          });
        })(contributor));
      }
      return results;
    });
  });
};

initialize = async() => {
  var repos;
  repos = (await fetchJSON("https://api.github.com/orgs/HackYourFuture/repos?per_page=100"));
  repos.sort((a, b) => {
    return a.name.localeCompare(b.name);
  });
  return buildTree(repos, 0);
};

initialize();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwMS5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxBcHAxLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxjQUFBLEVBQUEsU0FBQSxFQUFBOztBQUFBLFNBQUEsR0FBWSxRQUFBLENBQUMsS0FBRCxFQUFRLEtBQVIsQ0FBQTtFQUNYLElBQUEsQ0FBSyxRQUFBLENBQUEsQ0FBQTtBQUNKLFFBQUE7SUFBQSxNQUFBLENBQU87TUFBRSxLQUFBLEVBQU87SUFBVCxDQUFQLEVBQTRCLFFBQUEsQ0FBQSxDQUFBO01BQzNCLENBQUEsQ0FBRTtRQUFFLElBQUEsRUFBTTtNQUFSLENBQUY7YUFDQSxNQUFBLENBQU87UUFBRSxLQUFBLEVBQU8sZUFBVDtRQUEwQixZQUFBLEVBQWM7TUFBeEMsQ0FBUCxFQUFxRSxRQUFBLENBQUEsQ0FBQTtBQUNwRSxZQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLEtBQUEsRUFBQTtRQUFBLFdBQUEsQ0FBWSxRQUFaLEVBQXNCLENBQUMsR0FBRCxDQUFBLEdBQUE7aUJBQVMsY0FBQSxDQUFlLEtBQU0sQ0FBQSxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQVgsQ0FBckIsRUFBdUMsU0FBdkM7UUFBVCxDQUF0QjtBQUN3QztRQUFBLEtBQUEsbURBQUE7O3VCQUF4QyxNQUFBLENBQU87WUFBRSxJQUFBLEVBQU0sS0FBSyxDQUFDLElBQWQ7WUFBb0IsS0FBQSxFQUFPO1VBQTNCLENBQVA7UUFBd0MsQ0FBQTs7TUFGNEIsQ0FBckU7SUFGMkIsQ0FBNUI7V0FLQSxTQUFBLEdBQVksR0FBQSxDQUFJO01BQUMsRUFBQSxFQUFJO0lBQUwsQ0FBSjtFQU5SLENBQUw7RUFPQSxTQUFTLENBQUMsSUFBVixDQUFlLFNBQWY7U0FDQSxjQUFBLENBQWUsS0FBTSxDQUFBLEtBQUEsQ0FBckIsRUFBNEIsU0FBNUI7QUFUVzs7QUFVWixjQUFBLEdBQWlCLE1BQUEsUUFBQSxDQUFDLElBQUQsRUFB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O2NBQUUsS0FBQSxFQUFPO1lBQVQsQ0FBSixFQUFrQyxRQUFBLENBQUEsQ0FBQTtjQUNqQyxHQUFBLENBQUk7Z0JBQUUsSUFBQSxFQUFNLFdBQVcsQ0FBQztjQUFwQixDQUFKO3FCQUNBLEdBQUEsQ0FBSTtnQkFBRSxJQUFBLEVBQU0sV0FBVyxDQUFDLGFBQXBCO2dCQUFtQyxLQUFBLEVBQU87Y0FBMUMsQ0FBSjtZQUZpQyxDQUFsQztVQUo2RSxDQUE5RTtRQURFLENBQUEsQ0FBSCxDQUFJLFdBQUo7TUFERCxDQUFBOztJQURpQyxDQUFsQztFQUZzQyxDQUF2QztBQWxCZ0I7O0FBOEJqQixVQUFBLEdBQWEsS0FBQSxDQUFBLENBQUEsR0FBQTtBQUNaLE1BQUE7RUFBQSxLQUFBLEdBQVEsQ0FBQSxNQUFNLFNBQUEsQ0FBVSwrREFBVixDQUFOO0VBQ1IsS0FBSyxDQUFDLElBQU4sQ0FBVyxDQUFDLENBQUQsRUFBRyxDQUFILENBQUEsR0FBQTtXQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBUCxDQUFxQixDQUFDLENBQUMsSUFBdkI7RUFBVCxDQUFYO1NBQ0EsU0FBQSxDQUFVLEtBQVYsRUFBZ0IsQ0FBaEI7QUFIWTs7QUFJYixVQUFBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJidWlsZFRyZWUgPSAocmVwb3MsIGluZGV4KSAtPlxyXG5cdGJvZHkgLT5cclxuXHRcdGhlYWRlciB7IGNsYXNzOiBcImhlYWRlclwiIH0sIC0+XHJcblx0XHRcdHAgeyB0ZXh0OiBcIkhZRiBSZXBvc2l0b3JpZXNcIn1cclxuXHRcdFx0c2VsZWN0IHsgY2xhc3M6IFwicmVwby1zZWxlY3RvclwiLCBcImFyaWEtbGFiZWxcIjogXCJIWUYgUmVwb3NpdG9yaWVzXCIgfSwgLT5cclxuXHRcdFx0XHRhZGRMaXN0ZW5lciAnY2hhbmdlJywgKGV2dCkgPT4gYnVpbGRDb250YWluZXIgcmVwb3NbZXZ0LnRhcmdldC52YWx1ZV0sY29udGFpbmVyXHJcblx0XHRcdFx0b3B0aW9uIHsgdGV4dDogcmVwbzEubmFtZSwgdmFsdWU6IGtleSB9IGZvciByZXBvMSxrZXkgaW4gcmVwb3NcclxuXHRcdGNvbnRhaW5lciA9IGRpdiB7aWQ6ICdjb250YWluZXInfVxyXG5cdGFuY2VzdG9ycy5wdXNoIGNvbnRhaW5lclxyXG5cdGJ1aWxkQ29udGFpbmVyIHJlcG9zW2luZGV4XSxjb250YWluZXJcclxuYnVpbGRDb250YWluZXIgPSAocmVwbyxjb250YWluZXIpIC0+XHJcblx0Y29udHJpYnV0b3JzID0gYXdhaXQgZmV0Y2hKU09OIHJlcG8uY29udHJpYnV0b3JzX3VybFxyXG5cdGNvbnRhaW5lci5pbm5lckhUTUwgPSAnJ1xyXG5cdGRpdiB7IGNsYXNzOiBcImxlZnQtZGl2IHdoaXRlZnJhbWVcIiB9LCAtPlxyXG5cdFx0dGFibGUge30sIC0+XHJcblx0XHRcdHRib2R5IHt9LCAtPlxyXG5cdFx0XHRcdHRyIHt9LCAtPlxyXG5cdFx0XHRcdFx0dGQge3RleHQ6IFwiUmVwb3NpdG9yeVwifVxyXG5cdFx0XHRcdFx0dGQge30sIC0+IGEge3RleHQ6IHJlcG8ubmFtZSwgaHJlZjogcmVwby5odG1sX3VybCwgdGFyZ2V0OiBcIl9ibGFua1wifVxyXG5cdFx0XHRcdHRyIHt9LCAtPlxyXG5cdFx0XHRcdFx0dGQge3RleHQ6ICdEZXNjcmlwdGlvbid9XHJcblx0XHRcdFx0XHR0ZCB7dGV4dDogcmVwby5kZXNjcmlwdGlvbn1cclxuXHRcdFx0XHR0ciB7fSwgLT5cclxuXHRcdFx0XHRcdHRkIHt0ZXh0OiAnRm9ya3MnfVxyXG5cdFx0XHRcdFx0dGQge3RleHQ6IHJlcG8uZm9ya3N9XHJcblx0XHRcdFx0dHIge30sIC0+XHJcblx0XHRcdFx0XHR0ZCB7dGV4dDogJ1VwZGF0ZWQnfVxyXG5cdFx0XHRcdFx0dGQge3RleHQ6IG5ldyBEYXRlKHJlcG8udXBkYXRlZF9hdCkudG9Mb2NhbGVTdHJpbmcoJ3N2Jyl9XHJcblx0ZGl2IHsgY2xhc3M6IFwicmlnaHQtZGl2IHdoaXRlZnJhbWVcIiB9LCAtPlxyXG5cdFx0cCB7IHRleHQ6IFwiQ29udHJpYnV0aW9uc1wiLCBjbGFzczogXCJjb250cmlidXRvci1oZWFkZXJcIiB9XHJcblx0XHR1bCB7IGNsYXNzOiBcImNvbnRyaWJ1dG9yLWxpc3RcIiB9LCAtPlxyXG5cdFx0XHRmb3IgY29udHJpYnV0b3IgaW4gY29udHJpYnV0b3JzXHJcblx0XHRcdFx0ZG8gKGNvbnRyaWJ1dG9yKSA9PlxyXG5cdFx0XHRcdFx0bGkge2NsYXNzOiBcImNvbnRyaWJ1dG9yLWl0ZW1cIiwgXCJhcmlhLWxhYmVsXCI6IGNvbnRyaWJ1dG9yLmxvZ2luLCB0YWJpbmRleDogMH0sIC0+XHJcblx0XHRcdFx0XHRcdGFkZExpc3RlbmVyICdjbGljaycsID0+IHdpbmRvdy5vcGVuIGNvbnRyaWJ1dG9yLmh0bWxfdXJsLCBcIl9ibGFua1wiXHJcblx0XHRcdFx0XHRcdGFkZExpc3RlbmVyICdrZXl1cCcsICh0KSA9PiBpZiB0LmtleSA9PSAnRW50ZXInIHRoZW4gd2luZG93Lm9wZW4gY29udHJpYnV0b3IuaHRtbF91cmwsIFwiX2JsYW5rXCJcclxuXHRcdFx0XHRcdFx0aW1nIHsgc3JjOiBjb250cmlidXRvci5hdmF0YXJfdXJsLCBoZWlnaHQ6IDQ4LCBjbGFzczogXCJjb250cmlidXRvci1hdmF0YXJcIn1cclxuXHRcdFx0XHRcdFx0ZGl2IHsgY2xhc3M6IFwiY29udHJpYnV0b3ItZGF0YVwifSwgLT5cclxuXHRcdFx0XHRcdFx0XHRkaXYgeyB0ZXh0OiBjb250cmlidXRvci5sb2dpbiB9XHJcblx0XHRcdFx0XHRcdFx0ZGl2IHsgdGV4dDogY29udHJpYnV0b3IuY29udHJpYnV0aW9ucywgY2xhc3M6IFwiY29udHJpYnV0b3ItYmFkZ2VcIiB9XHJcbmluaXRpYWxpemUgPSAoKSA9PiBcclxuXHRyZXBvcyA9IGF3YWl0IGZldGNoSlNPTiBcImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vb3Jncy9IYWNrWW91ckZ1dHVyZS9yZXBvcz9wZXJfcGFnZT0xMDBcIlxyXG5cdHJlcG9zLnNvcnQgKGEsYikgPT4gYS5uYW1lLmxvY2FsZUNvbXBhcmUgYi5uYW1lXHJcblx0YnVpbGRUcmVlIHJlcG9zLDBcclxuaW5pdGlhbGl6ZSgpIl19
//# sourceURL=c:\github\foo\019-Coffee\coffee\App1.coffee