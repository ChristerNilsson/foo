// Generated by CoffeeScript 2.3.2
var URL, contributors, repo, repos, view;

URL = "https://api.github.com/orgs/HackYourFuture/repos?per_page=100";

repos = null;

repo = null;

contributors = [];

fetch(URL).then((response) => {
  return response.json();
}).then((json) => {
  repos = json;
  repos.sort((a, b) => {
    return a.name.localeCompare(b.name);
  });
  print(repos);
  repo = repos[0];
  return fetch(repo.contributors_url).then((response) => {
    return response.json();
  }).then((json) => {
    contributors = json;
    return view(0);
  });
});

view = function(repoNr) {
  document.body.innerHTML = ''; // BAD!
  return body(function() {
    header({
      class: "header"
    }, function() {
      var select0;
      p({
        text: "HYF Repositories"
      });
      select0 = select({
        class: "repo-selector",
        "aria-label": "HYF Repositories"
      }, function() {
        var i, key, len, repo1, results;
        results = [];
        for (key = i = 0, len = repos.length; i < len; key = ++i) {
          repo1 = repos[key];
          results.push(option({
            text: repo1.name,
            value: key
          }));
        }
        return results;
      });
      select0.value = repoNr;
      return select0.onchange = () => {
        repo = repos[select0.value];
        return fetch(repo.contributors_url).then((response) => {
          return response.json();
        }).then((json) => {
          contributors = json;
          return view(select0.value);
        });
      };
    });
    return div({
      id: 'container'
    }, function() {
      div({
        class: "left-div whiteframe"
      }, function() {
        return table({}, function() {
          return tbody({}, function() {
            tr({}, function() {
              td({
                text: "Repository"
              });
              return td({}, function() {
                return a({
                  text: repo.name,
                  href: repo.html_url,
                  target: "_blank"
                });
              });
            });
            tr({}, function() {
              td({
                text: 'Description'
              });
              return td({
                text: repo.description
              });
            });
            tr({}, function() {
              td({
                text: 'Forks'
              });
              return td({
                text: repo.forks
              });
            });
            return tr({}, function() {
              td({
                text: 'Updated'
              });
              return td({
                text: new Date(repo.updated_at).toLocaleString('sv')
              });
            });
          });
        });
      });
      return div({
        class: "right-div whiteframe"
      }, function() {
        p({
          text: "Contributions",
          class: "contributor-header"
        });
        return ul({
          class: "contributor-list"
        }, function() {
          var contributor, i, len, li0, results;
          results = [];
          for (i = 0, len = contributors.length; i < len; i++) {
            contributor = contributors[i];
            li0 = li({
              class: "contributor-item",
              "aria-label": contributor.login,
              tabindex: 0
            }, function() {
              img({
                src: contributor.avatar_url,
                height: 48,
                class: "contributor-avatar"
              });
              return div({
                class: "contributor-data"
              }, function() {
                div({
                  text: contributor.login
                });
                return div({
                  text: contributor.contributions,
                  class: "contributor-badge"
                });
              });
            });
            results.push(((contributor) => {
              li0.onclick = () => {
                return window.open(contributor.html_url, "_blank");
              };
              return li0.onkeyup = function(t) {
                if (t.key === 'Enter') {
                  return window.open(contributor.html_url, "_blank");
                }
              };
            })(contributor));
          }
          return results;
        });
      });
    });
  });
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\foo\019-Coffee\coffee\App.coffee