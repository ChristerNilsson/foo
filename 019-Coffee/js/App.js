// Generated by CoffeeScript 2.3.2
var URL, buildContributors, buildRepo, buildRepos, container, fetchContributors, initialize, repo;

URL = "https://api.github.com/orgs/HackYourFuture/repos?per_page=100";

repo = null;

container = null;

initialize = async function() {
  var repos;
  repos = (await fetchJSON(URL));
  repos.sort((a, b) => {
    return a.name.localeCompare(b.name);
  });
  repo = repos[0];
  body(function() {
    buildRepos(repos);
    return container = div({
      id: 'container'
    }, function() {
      return fetchContributors();
    });
  });
  stack.push(container);
  return print(document.body);
};

buildRepos = function(repos) {
  return header({
    class: "header"
  }, function() {
    var select0;
    p({
      text: "HYF Repositories"
    });
    select0 = select({
      class: "repo-selector",
      "aria-label": "HYF Repositories"
    }, function() {
      var i, key, len, repo1, results;
      results = [];
      for (key = i = 0, len = repos.length; i < len; key = ++i) {
        repo1 = repos[key];
        results.push(option({
          text: repo1.name,
          value: key
        }));
      }
      return results;
    });
    select0.onchange = () => {
      repo = repos[select0.value];
      container.innerHTML = '';
      return fetchContributors();
    };
    return select0.value = 0;
  });
};

fetchContributors = async function() {
  var contributors;
  contributors = (await fetchJSON(repo.contributors_url));
  buildRepo();
  return buildContributors(contributors);
};

buildRepo = function() {
  return div({
    class: "left-div whiteframe"
  }, function() {
    return table({}, function() {
      return tbody({}, function() {
        tr({}, function() {
          td({
            text: "Repository"
          });
          return td({}, function() {
            return a({
              text: repo.name,
              href: repo.html_url,
              target: "_blank"
            });
          });
        });
        tr({}, function() {
          td({
            text: 'Description'
          });
          return td({
            text: repo.description
          });
        });
        tr({}, function() {
          td({
            text: 'Forks'
          });
          return td({
            text: repo.forks
          });
        });
        return tr({}, function() {
          td({
            text: 'Updated'
          });
          return td({
            text: new Date(repo.updated_at).toLocaleString('sv')
          });
        });
      });
    });
  });
};

buildContributors = function(contributors) {
  return div({
    class: "right-div whiteframe"
  }, function() {
    p({
      text: "Contributions",
      class: "contributor-header"
    });
    return ul({
      class: "contributor-list"
    }, function() {
      var contributor, i, len, results;
      results = [];
      for (i = 0, len = contributors.length; i < len; i++) {
        contributor = contributors[i];
        results.push(((contributor) => {
          var li0;
          li0 = li({
            class: "contributor-item",
            "aria-label": contributor.login,
            tabindex: 0
          }, function() {
            img({
              src: contributor.avatar_url,
              height: 48,
              class: "contributor-avatar"
            });
            return div({
              class: "contributor-data"
            }, function() {
              div({
                text: contributor.login
              });
              return div({
                text: contributor.contributions,
                class: "contributor-badge"
              });
            });
          });
          li0.onclick = () => {
            return window.open(contributor.html_url, "_blank");
          };
          return li0.onkeyup = function(t) {
            if (t.key === 'Enter') {
              return window.open(contributor.html_url, "_blank");
            }
          };
        })(contributor));
      }
      return results;
    });
  });
};

initialize(URL);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXEFwcC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsR0FBQSxFQUFBLGlCQUFBLEVBQUEsU0FBQSxFQUFBLFVBQUEsRUFBQSxTQUFBLEVBQUEsaUJBQUEsRUFBQSxVQUFBLEVBQUE7O0FBQUEsR0FBQSxHQUFNOztBQUVOLElBQUEsR0FBTzs7QUFDUCxTQUFBLEdBQVk7O0FBRVosVUFBQSxHQUFhLE1BQUEsUUFBQSxDQUFBLENBQUE7QUFDWixNQUFBO0VBQUEsS0FBQSxHQUFRLENBQUEsTUFBTSxTQUFBLENBQVUsR0FBVixDQUFOO0VBQ1IsS0FBSyxDQUFDLElBQU4sQ0FBVyxDQUFDLENBQUQsRUFBRyxDQUFILENBQUEsR0FBQTtXQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBUCxDQUFxQixDQUFDLENBQUMsSUFBdkI7RUFBVCxDQUFYO0VBQ0EsSUFBQSxHQUFPLEtBQU0sQ0FBQSxDQUFBO0VBQ2IsSUFBQSxDQUFLLFFBQUEsQ0FBQSxDQUFBO0lBQ0osVUFBQSxDQUFXLEtBQVg7V0FDQSxTQUFBLEdBQVksR0FBQSxDQUFJO01BQUMsRUFBQSxFQUFLO0lBQU4sQ0FBSixFQUF3QixRQUFBLENBQUEsQ0FBQTthQUNuQyxpQkFBQSxDQUFBO0lBRG1DLENBQXhCO0VBRlIsQ0FBTDtFQUlBLEtBQUssQ0FBQyxJQUFOLENBQVcsU0FBWDtTQUNBLEtBQUEsQ0FBTSxRQUFRLENBQUMsSUFBZjtBQVRZOztBQVdiLFVBQUEsR0FBYSxRQUFBLENBQUMsS0FBRCxDQUFBO1NBQ1osTUFBQSxDQUFPO0lBQUUsS0FBQSxFQUFRO0VBQVYsQ0FBUCxFQUE2QixRQUFBLENBQUEsQ0FBQTtBQUM1QixRQUFBO0lBQUEsQ0FBQSxDQUFFO01BQUUsSUFBQSxFQUFPO0lBQVQsQ0FBRjtJQUNBLE9BQUEsR0FBVSxNQUFBLENBQU87TUFBRSxLQUFBLEVBQVEsZUFBVjtNQUEyQixZQUFB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QUQsQ0FBQSxHQUFBO0FBQ0YsY0FBQTtVQUFBLEdBQUEsR0FBSSxFQUFBLENBQUc7WUFBQyxLQUFBLEVBQU0sa0JBQVA7WUFBMkIsWUFBQSxFQUFhLFdBQVcsQ0FBQyxLQUFwRDtZQUEyRCxRQUFBLEVBQVM7VUFBcEUsQ0FBSCxFQUEyRSxRQUFBLENBQUEsQ0FBQTtZQUM5RSxHQUFBLENBQUk7Y0FBRSxHQUFBLEVBQU0sV0FBVyxDQUFDLFVBQXBCO2NBQWdDLE1BQUEsRUFBUyxFQUF6QztjQUE2QyxLQUFBLEVBQVE7WUFBckQsQ0FBSjttQkFDQSxHQUFBLENBQUk7Y0FBRSxLQUFBLEVBQVE7WUFBVixDQUFKLEVBQW1DLFFBQUEsQ0FBQSxDQUFBO2NBQ2xDLEdBQUEsQ0FBSTtnQkFBRSxJQUFBLEVBQU8sV0FBVyxDQUFDO2NBQXJCLENBQUo7cUJBQ0EsR0FBQSxDQUFJO2dCQUFFLElBQUEsRUFBTyxXQUFXLENBQUMsYUFBckI7Z0JBQW9DLEtBQUEsRUFBUTtjQUE1QyxDQUFKO1lBRmtDLENBQW5DO1VBRjhFLENBQTNFO1VBS0osR0FBRyxDQUFDLE9BQUosR0FBYyxDQUFBLENBQUEsR0FBQTttQkFBRyxNQUFNLENBQUMsSUFBUCxDQUFZLFdBQVcsQ0FBQyxRQUF4QixFQUFrQyxRQUFsQztVQUFIO2lCQUNkLEdBQUcsQ0FBQyxPQUFKLEdBQWMsUUFBQSxDQUFDLENBQUQsQ0FBQTtZQUNiLElBQUcsQ0FBQyxDQUFDLEdBQUYsS0FBUyxPQUFaO3FCQUF5QixNQUFNLENBQUMsSUFBUCxDQUFZLFdBQVcsQ0FBQyxRQUF4QixFQUFrQyxRQUFsQyxFQUF6Qjs7VUFEYTtRQVBaLENBQUEsQ0FBSCxDQUFJLFdBQUo7TUFERCxDQUFBOztJQURrQyxDQUFuQztFQUZ1QyxDQUF4QztBQURtQjs7QUFlcEIsVUFBQSxDQUFXLEdBQVgiLCJzb3VyY2VzQ29udGVudCI6WyJVUkwgPSBcImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vb3Jncy9IYWNrWW91ckZ1dHVyZS9yZXBvcz9wZXJfcGFnZT0xMDBcIlxyXG5cclxucmVwbyA9IG51bGxcclxuY29udGFpbmVyID0gbnVsbFxyXG5cclxuaW5pdGlhbGl6ZSA9IC0+XHJcblx0cmVwb3MgPSBhd2FpdCBmZXRjaEpTT04gVVJMXHJcblx0cmVwb3Muc29ydCAoYSxiKSA9PiBhLm5hbWUubG9jYWxlQ29tcGFyZSBiLm5hbWVcclxuXHRyZXBvID0gcmVwb3NbMF1cclxuXHRib2R5IC0+XHJcblx0XHRidWlsZFJlcG9zIHJlcG9zXHJcblx0XHRjb250YWluZXIgPSBkaXYge2lkIDogJ2NvbnRhaW5lcid9LCAtPlxyXG5cdFx0XHRmZXRjaENvbnRyaWJ1dG9ycygpXHJcblx0c3RhY2sucHVzaCBjb250YWluZXJcclxuXHRwcmludCBkb2N1bWVudC5ib2R5XHJcblxyXG5idWlsZFJlcG9zID0gKHJlcG9zKSAtPlxyXG5cdGhlYWRlciB7IGNsYXNzIDogXCJoZWFkZXJcIiB9LCAtPlxyXG5cdFx0cCB7IHRleHQgOiBcIkhZRiBSZXBvc2l0b3JpZXNcIn1cclxuXHRcdHNlbGVjdDAgPSBzZWxlY3QgeyBjbGFzcyA6IFwicmVwby1zZWxlY3RvclwiLCBcImFyaWEtbGFiZWxcIiA6IFwiSFlGIFJlcG9zaXRvcmllc1wiIH0sIC0+XHJcblx0XHRcdGZvciByZXBvMSxrZXkgaW4gcmVwb3NcclxuXHRcdFx0XHRvcHRpb24geyB0ZXh0IDogcmVwbzEubmFtZSwgdmFsdWUgOiBrZXkgfVxyXG5cdFx0c2VsZWN0MC5vbmNoYW5nZSA9ID0+XHJcblx0XHRcdHJlcG8gPSByZXBvc1tzZWxlY3QwLnZhbHVlXVxyXG5cdFx0XHRjb250YWluZXIuaW5uZXJIVE1MID0gJydcclxuXHRcdFx0ZmV0Y2hDb250cmlidXRvcnMoKVxyXG5cdFx0c2VsZWN0MC52YWx1ZSA9IDBcclxuXHJcbmZldGNoQ29udHJpYnV0b3JzID0gLT5cclxuXHRjb250cmlidXRvcnMgPSBhd2FpdCBmZXRjaEpTT04gcmVwby5jb250cmlidXRvcnNfdXJsXHJcblx0YnVpbGRSZXBvKClcclxuXHRidWlsZENvbnRyaWJ1dG9ycyBjb250cmlidXRvcnNcclxuXHJcbmJ1aWxkUmVwbyA9IC0+XHJcblx0ZGl2IHsgY2xhc3MgOiBcImxlZnQtZGl2IHdoaXRlZnJhbWVcIiB9LCAtPlxyXG5cdFx0dGFibGUge30sIC0+XHJcblx0XHRcdHRib2R5IHt9LCAtPlxyXG5cdFx0XHRcdHRyIHt9LCAtPlxyXG5cdFx0XHRcdFx0dGQge3RleHQ6IFwiUmVwb3NpdG9yeVwifVxyXG5cdFx0XHRcdFx0dGQge30sIC0+XHJcblx0XHRcdFx0XHRcdGEge3RleHQ6IHJlcG8ubmFtZSwgaHJlZjogcmVwby5odG1sX3VybCwgdGFyZ2V0OlwiX2JsYW5rXCJ9XHJcblx0XHRcdFx0dHIge30sIC0+XHJcblx0XHRcdFx0XHR0ZCB7dGV4dDogJ0Rlc2NyaXB0aW9uJ31cclxuXHRcdFx0XHRcdHRkIHt0ZXh0OiByZXBvLmRlc2NyaXB0aW9ufVxyXG5cdFx0XHRcdHRyIHt9LCAtPlxyXG5cdFx0XHRcdFx0dGQge3RleHQ6ICdGb3Jrcyd9XHJcblx0XHRcdFx0XHR0ZCB7dGV4dDogcmVwby5mb3Jrc31cclxuXHRcdFx0XHR0ciB7fSwgLT5cclxuXHRcdFx0XHRcdHRkIHt0ZXh0OiAnVXBkYXRlZCd9XHJcblx0XHRcdFx0XHR0ZCB7dGV4dDogbmV3IERhdGUocmVwby51cGRhdGVkX2F0KS50b0xvY2FsZVN0cmluZygnc3YnKX1cclxuXHJcbmJ1aWxkQ29udHJpYnV0b3JzID0gKGNvbnRyaWJ1dG9ycykgLT5cclxuXHRkaXYgeyBjbGFzcyA6IFwicmlnaHQtZGl2IHdoaXRlZnJhbWVcIiB9LCAtPlxyXG5cdFx0cCB7IHRleHQgOiBcIkNvbnRyaWJ1dGlvbnNcIiwgY2xhc3MgOiBcImNvbnRyaWJ1dG9yLWhlYWRlclwiIH1cclxuXHRcdHVsIHsgY2xhc3MgOiBcImNvbnRyaWJ1dG9yLWxpc3RcIiB9LCAtPlxyXG5cdFx0XHRmb3IgY29udHJpYnV0b3IgaW4gY29udHJpYnV0b3JzXHJcblx0XHRcdFx0ZG8gKGNvbnRyaWJ1dG9yKSA9PlxyXG5cdFx0XHRcdFx0bGkwPWxpIHtjbGFzczpcImNvbnRyaWJ1dG9yLWl0ZW1cIiwgXCJhcmlhLWxhYmVsXCI6Y29udHJpYnV0b3IubG9naW4sIHRhYmluZGV4OjB9LCAtPlxyXG5cdFx0XHRcdFx0XHRpbWcgeyBzcmMgOiBjb250cmlidXRvci5hdmF0YXJfdXJsLCBoZWlnaHQgOiA0OCwgY2xhc3MgOiBcImNvbnRyaWJ1dG9yLWF2YXRhclwifVxyXG5cdFx0XHRcdFx0XHRkaXYgeyBjbGFzcyA6IFwiY29udHJpYnV0b3ItZGF0YVwifSwgLT5cclxuXHRcdFx0XHRcdFx0XHRkaXYgeyB0ZXh0IDogY29udHJpYnV0b3IubG9naW4gfVxyXG5cdFx0XHRcdFx0XHRcdGRpdiB7IHRleHQgOiBjb250cmlidXRvci5jb250cmlidXRpb25zLCBjbGFzcyA6IFwiY29udHJpYnV0b3ItYmFkZ2VcIiB9XHJcblx0XHRcdFx0XHRsaTAub25jbGljayA9ID0+IHdpbmRvdy5vcGVuIGNvbnRyaWJ1dG9yLmh0bWxfdXJsLCBcIl9ibGFua1wiXHJcblx0XHRcdFx0XHRsaTAub25rZXl1cCA9ICh0KSAtPlxyXG5cdFx0XHRcdFx0XHRpZiB0LmtleSA9PSAnRW50ZXInIHRoZW4gd2luZG93Lm9wZW4gY29udHJpYnV0b3IuaHRtbF91cmwsIFwiX2JsYW5rXCJcclxuXHJcbmluaXRpYWxpemUgVVJMXHJcbiJdfQ==
//# sourceURL=c:\github\foo\019-Coffee\coffee\App.coffee