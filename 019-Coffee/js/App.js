// Generated by CoffeeScript 2.3.2
var URL, buildContributors, buildRepo, buildRepos, container, fetchContributors, initialize, repo;

URL = "https://api.github.com/orgs/HackYourFuture/repos?per_page=100";

repo = null;

container = null;

initialize = async function() {
  var repos;
  repos = (await fetchJSON(URL));
  repos.sort((a, b) => {
    return a.name.localeCompare(b.name);
  });
  repo = repos[0];
  body(function() {
    buildRepos(repos);
    return container = div({
      id: 'container'
    }, function() {
      return fetchContributors();
    });
  });
  ancestors.push(container);
  return console.dir(document.body);
};

buildRepos = function(repos) {
  return header({
    class: "header"
  }, function() {
    var select0;
    p({
      text: "HYF Repositories"
    });
    select0 = select({
      class: "repo-selector",
      "aria-label": "HYF Repositories"
    }, function() {
      var i, key, len, repo1, results;
      addListener('change', () => {
        repo = repos[select0.value];
        container.innerHTML = '';
        return fetchContributors();
      });
      results = [];
      for (key = i = 0, len = repos.length; i < len; key = ++i) {
        repo1 = repos[key];
        results.push(option({
          text: repo1.name,
          value: key
        }));
      }
      return results;
    });
    return select0.value = 0;
  });
};

fetchContributors = async function() {
  var contributors;
  contributors = (await fetchJSON(repo.contributors_url));
  buildRepo();
  return buildContributors(contributors);
};

buildRepo = function() {
  return div({
    class: "left-div whiteframe"
  }, function() {
    return table({}, function() {
      return tbody({}, function() {
        tr({}, function() {
          td({
            text: "Repository"
          });
          return td({}, function() {
            return a({
              text: repo.name,
              href: repo.html_url,
              target: "_blank"
            });
          });
        });
        tr({}, function() {
          td({
            text: 'Description'
          });
          return td({
            text: repo.description
          });
        });
        tr({}, function() {
          td({
            text: 'Forks'
          });
          return td({
            text: repo.forks
          });
        });
        return tr({}, function() {
          td({
            text: 'Updated'
          });
          return td({
            text: new Date(repo.updated_at).toLocaleString('sv')
          });
        });
      });
    });
  });
};

buildContributors = function(contributors) {
  return div({
    class: "right-div whiteframe"
  }, function() {
    p({
      text: "Contributions",
      class: "contributor-header"
    });
    return ul({
      class: "contributor-list"
    }, function() {
      var contributor, i, len, results;
      results = [];
      for (i = 0, len = contributors.length; i < len; i++) {
        contributor = contributors[i];
        results.push(((contributor) => {
          return li({
            class: "contributor-item",
            "aria-label": contributor.login,
            tabindex: 0
          }, function() {
            addListener('click', () => {
              return window.open(contributor.html_url, "_blank");
            });
            addListener('keyup', function(t) {
              if (t.key === 'Enter') {
                return window.open(contributor.html_url, "_blank");
              }
            });
            img({
              src: contributor.avatar_url,
              height: 48,
              class: "contributor-avatar"
            });
            return div({
              class: "contributor-data"
            }, function() {
              div({
                text: contributor.login
              });
              return div({
                text: contributor.contributions,
                class: "contributor-badge"
              });
            });
          });
        })(contributor));
      }
      return results;
    });
  });
};

initialize(URL);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\foo\019-Coffee\coffee\App.coffee